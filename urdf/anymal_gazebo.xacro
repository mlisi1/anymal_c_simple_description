<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:macro name="ros2_control_joint" params="joint_name">
        <ros2_control name="${joint_name}" type="system">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>

            <joint name="${joint_name}">
                <command_interface name="effort"/>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
                <state_interface name="effort"/>
            </joint>

        </ros2_control> 
    </xacro:macro>


    <xacro:ros2_control_joint joint_name="LF_HAA"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="LF_HFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="LF_KFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RF_HAA"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RF_HFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RF_KFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="LH_HAA"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="LH_HFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="LH_KFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RH_HAA"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RH_HFE"></xacro:ros2_control_joint>
    <xacro:ros2_control_joint joint_name="RH_KFE"></xacro:ros2_control_joint>



    <!-- ros2_control plugin -->
    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>

        
        <sensor name="imu_sensor">
            <state_interface name="orientation.x"/>
            <state_interface name="orientation.y"/>
            <state_interface name="orientation.z"/>
            <state_interface name="orientation.w"/>
            <state_interface name="angular_velocity.x"/>
            <state_interface name="angular_velocity.y"/>
            <state_interface name="angular_velocity.z"/>
            <state_interface name="linear_acceleration.x"/>
            <state_interface name="linear_acceleration.y"/>
            <state_interface name="linear_acceleration.z"/>
        </sensor>
    </ros2_control>


    <!-- Effort_controller -->
    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <parameters>$(find anymal_c_gazebo)/config/ros_control.yaml</parameters>
        </plugin>
    </gazebo>


    <!-- IMU sensor -->
    <gazebo reference="base">
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>400</update_rate>
            <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
                <ros>
                    <namespace>/imu</namespace>
                    <remapping>~/out:=data</remapping>
                </ros>
                <frame_name>base</frame_name>
                <initial_orientation_as_reference>true</initial_orientation_as_reference>
            </plugin>

            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.00000</bias_mean>
                            <bias_stddev>0.000000</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>-0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.00000</bias_mean>
                            <bias_stddev>0.000000</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.00000</bias_mean>
                            <bias_stddev>0.000000</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.0</bias_mean>
                            <bias_stddev>0.00</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>-0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.0</bias_mean>
                            <bias_stddev>0.00</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0.0</bias_mean>
                            <bias_stddev>0.00</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>


    <!-- Contact sensors for the four feet -->
    <!-- LF_FOOT -->
    <gazebo reference="LF_FOOT">
        <sensor name="LF_FOOT_contct_sensor" type="contact">
            <always_on>true</always_on>
            <update_rate>25.0</update_rate>
            <contact>
                <!-- gz sdf -p turtlebot3_burger.urdf.xacro and look for the name of the desired collision element. -->
                <xacro:if value="${remove_shank_collisions}">
                    <collision>LF_SHANK_fixed_joint_lump__LF_FOOT_collision_2</collision>
                </xacro:if>
                <xacro:unless value="${remove_shank_collisions}">
                    <collision>LF_SHANK_fixed_joint_lump__LF_FOOT_collision_3</collision>
                </xacro:unless>
            </contact>
            <plugin name="LF_FOOT_bumper" filename="libgazebo_ros_bumper.so">
                <ros>
                    <!-- <namespace>demo</namespace> -->
                    <remapping>bumper_states:=/contact_force_sensors/LF</remapping>
                </ros>
                <frame_name>world</frame_name>
            </plugin>
        </sensor>
    </gazebo>
    <!-- RF_FOOT -->
    <gazebo reference="RF_FOOT">
        <sensor name="RF_FOOT_contct_sensor" type="contact">
            <always_on>true</always_on>
            <update_rate>25.0</update_rate>
            <contact>
                <!-- gz sdf -p turtlebot3_burger.urdf.xacro and look for the name of the desired collision element. -->
                <xacro:if value="${remove_shank_collisions}">
                    <collision>RF_SHANK_fixed_joint_lump__RF_FOOT_collision_2</collision>
                </xacro:if>
                <xacro:unless value="${remove_shank_collisions}">
                    <collision>RF_SHANK_fixed_joint_lump__RF_FOOT_collision_3</collision>
                </xacro:unless>
            </contact>
            <plugin name="RF_FOOT_bumper" filename="libgazebo_ros_bumper.so">
                <ros>
                    <!-- <namespace>demo</namespace> -->
                    <remapping>bumper_states:=/contact_force_sensors/RF</remapping>
                </ros>
                <frame_name>world</frame_name>
            </plugin>
        </sensor>
    </gazebo>
    <!-- LH_FOOT -->
    <gazebo reference="LH_FOOT">
        <sensor name="LH_FOOT_contct_sensor" type="contact">
            <always_on>true</always_on>
            <update_rate>25.0</update_rate>
            <contact>
                <!-- gz sdf -p turtlebot3_burger.urdf.xacro and look for the name of the desired collision element. -->
                <xacro:if value="${remove_shank_collisions}">
                    <collision>LH_SHANK_fixed_joint_lump__LH_FOOT_collision_2</collision>
                </xacro:if>
                <xacro:unless value="${remove_shank_collisions}">
                    <collision>LH_SHANK_fixed_joint_lump__LH_FOOT_collision_3</collision>
                </xacro:unless>
            </contact>
            <plugin name="LH_FOOT_bumper" filename="libgazebo_ros_bumper.so">
                <ros>
                    <!-- <namespace>demo</namespace> -->
                    <remapping>bumper_states:=/contact_force_sensors/LH</remapping>
                </ros>
                <frame_name>world</frame_name>
            </plugin>
        </sensor>
    </gazebo>
    <!-- RH_FOOT -->
    <gazebo reference="RH_FOOT">
        <sensor name="RH_FOOT_contct_sensor" type="contact">
            <always_on>true</always_on>
            <update_rate>25.0</update_rate>
            <contact>
                <!-- gz sdf -p turtlebot3_burger.urdf.xacro and look for the name of the desired collision element. -->
                <xacro:if value="${remove_shank_collisions}">
                    <collision>RH_SHANK_fixed_joint_lump__RH_FOOT_collision_2</collision>
                </xacro:if>
                <xacro:unless value="${remove_shank_collisions}">
                    <collision>RH_SHANK_fixed_joint_lump__RH_FOOT_collision_3</collision>
                </xacro:unless>
            </contact>
            <plugin name="RH_FOOT_bumper" filename="libgazebo_ros_bumper.so">
                <ros>
                    <!-- <namespace>demo</namespace> -->
                    <remapping>bumper_states:=/contact_force_sensors/RH</remapping>
                </ros>
                <frame_name>world</frame_name>
            </plugin>
        </sensor>
    </gazebo>

</robot>
